name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  test:
    name: Test Backend y Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Instalar dependencias backend
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          pip install pytest

      - name: Ejecutar tests backend
        run: |
          cd backend
          pytest --maxfail=1 --disable-warnings -q

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Instalar dependencias frontend
        run: |
          cd frontend
          npm install

      - name: Ejecutar tests frontend
        run: |
          cd frontend
          npm test -- --watchAll=false

  deploy:
    name: Deploy a Google Cloud Run (Backend)
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Autenticar con GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Instalar y configurar gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: linkedin-450920

      - name: Configurar Docker para GCR
        run: |
          gcloud auth configure-docker --quiet

      - name: Build y push imagen backend con Docker
        run: |
          docker build -t gcr.io/linkedin-450920/linkedinpower-backend ./backend
          docker push gcr.io/linkedin-450920/linkedinpower-backend

      - name: Deploy backend a Cloud Run
        run: |
          gcloud run deploy linkedinpower-backend \
            --image gcr.io/linkedin-450920/linkedinpower-backend \
            --region europe-west1 \
            --platform managed \
            --allow-unauthenticated
